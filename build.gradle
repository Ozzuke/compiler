plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
    id 'antlr'
    id 'idea'
}

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'
java.sourceCompatibility = JavaVersion.VERSION_21

kotlin {
    jvmToolchain(21)
}

repositories {
    mavenCentral()
}

dependencies {
    // week3
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.0-jre'
    implementation group: 'guru.nidi', name: 'graphviz-java-all-j2v8', version: '0.18.1'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
    // week4
    implementation group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.core', version: '3.40.0'
    // week5
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.13.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.12.1'
    // week7
    antlr group: 'org.antlr', name: 'antlr4', version: '4.13.2'
    // week8
    implementation group: 'io.github.jamsesso', name: 'json-logic-java', version: '1.0.9'
    implementation group: 'org.jeasy', name: 'easy-rules-core', version: '4.1.0'
    implementation group: 'org.jeasy', name: 'easy-rules-mvel', version: '4.1.0'
    implementation group: 'org.mvel', name: 'mvel2', version: '2.5.2.Final'

    // initial
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    // week2
    testImplementation group: 'dk.brics', name: 'automaton', version: '1.12-4'
}

// ANTLR
ext.antlr = [
    destinationDir: 'src/gen/java'
]

generateGrammarSource {
    outputDirectory = file(antlr.destinationDir)
    arguments += ['-visitor', '-encoding', 'utf-8']
}

sourceSets {
    main.java.srcDir antlr.destinationDir
}

idea {
    module.generatedSourceDirs += file(antlr.destinationDir)
}

clean {
    delete antlr.destinationDir
}

compileKotlin {
    dependsOn(generateGrammarSource)
}

compileTestKotlin {
    dependsOn(generateTestGrammarSource)
}
